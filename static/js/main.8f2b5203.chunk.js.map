{"version":3,"sources":["Statistics/Statistics.js","FeedbackOptins/FeedbackOptions.js","Section/Section.js","Notification/Notification.js","Feedback/Feedback.js","App.js","index.js"],"names":["Statistics","good","neutral","bad","total","positivePercentage","className","FeedbackOptions","onIncrementGood","onIncrementNeutral","onIncrementBad","type","onClick","Section","props","title","children","Notification","message","Feedback","state","positive","countIncrementGood","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","countIncrementNeutral","countIncrementBad","Math","round","this","React","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qPAqBeA,EAlBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACf,sBAAKC,UAAU,aAAf,UACI,uCAAUL,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,EAAvB,WCSOE,G,MAdS,SAAC,GAAD,IAAGC,EAAH,EAAGA,gBAAiBC,EAApB,EAAoBA,mBAAoBC,EAAxC,EAAwCA,eAAxC,OACpB,sBAAKJ,UAAU,qBAAf,UACI,wBAAQA,UAAU,WAAWK,KAAK,SAASC,QAASJ,EAApD,kBACA,wBAAQF,UAAU,WAAWK,KAAK,SAASC,QAASH,EAApD,qBACA,wBAAQH,UAAU,WAAWK,KAAK,SAASC,QAASF,EAApD,sBCMOG,EAXC,SAACC,GAAD,OACZ,oCACI,6BAAKA,EAAMC,QACVD,EAAME,aCKAC,EARM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACjB,4BAAIA,KC4EOC,G,kNAxEXC,MAAQ,CACJnB,KAAM,EACNC,QAAS,EACTC,IAAK,EACLC,MAAO,EACPiB,SAAU,G,EAGdC,mBAAqB,WACjB,EAAKC,UAAS,SAAAC,GAAS,MAAK,CACxBvB,KAAMuB,EAAUvB,KAAO,MAE3B,EAAKwB,qBACL,EAAKC,mC,EAGTC,sBAAwB,WACpB,EAAKJ,UAAS,SAAAC,GAAS,MAAK,CACxBtB,QAASsB,EAAUtB,QAAU,MAEjC,EAAKuB,qBACL,EAAKC,mC,EAGTE,kBAAoB,WAChB,EAAKL,UAAS,SAAAC,GAAS,MAAK,CACxBrB,IAAKqB,EAAUrB,IAAM,MAEzB,EAAKsB,qBACL,EAAKC,mC,EAGTD,mBAAqB,WACjB,EAAKF,UAAS,SAAAC,GAAS,MAAK,CACxBpB,MAAOoB,EAAUpB,MAAQ,O,EAIjCsB,gCAAkC,WAC9B,EAAKH,UAAS,SAAAC,GAAS,MAAK,CACxBH,SAAUQ,KAAKC,MAAMN,EAAUvB,KAAOuB,EAAUpB,MAAQ,U,4CAIhE,WACI,OACI,sBAAKE,UAAU,WAAf,UACA,cAAC,EAAD,CAASS,MAAM,wBAAf,SACI,cAAC,EAAD,CACAP,gBAAiBuB,KAAKT,mBACtBb,mBAAoBsB,KAAKJ,sBACzBjB,eAAgBqB,KAAKH,sBAIzB,cAAC,EAAD,CAASb,MAAM,aAAf,SACKgB,KAAKX,MAAMhB,MACR,cAAC,EAAD,CACAH,KAAM8B,KAAKX,MAAMnB,KACjBC,QAAS6B,KAAKX,MAAMlB,QACpBC,IAAK4B,KAAKX,MAAMjB,IAChBC,MAAO2B,KAAKX,MAAMhB,MAClBC,mBAAoB0B,KAAKX,MAAMC,WAE/B,OAEPU,KAAKX,MAAMhB,MAAQ,KAAO,cAAC,EAAD,CAAcc,QAAQ,6B,GAnEtCc,IAAMC,YCGdC,EARH,WACV,OAEI,cAAC,EAAD,K,cCCNC,EAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.8f2b5203.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\r\n    <div className=\"statistics\">\r\n        <p>Good: {good}</p>\r\n        <p>Neutral: {neutral}</p>\r\n        <p>Bad: {bad}</p>\r\n        <p>Total: {total}</p>\r\n        <p>Positive feedback: {positivePercentage}%</p> \r\n    </div>\r\n);\r\n\r\nStatistics.propTypes = {\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n    total: PropTypes.number.isRequired,\r\n    positivePercentage: PropTypes.number.isRequired\r\n}\r\n\r\nexport default Statistics;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './FeedbackOptions.css';\r\n\r\nconst FeedbackOptions = ({ onIncrementGood, onIncrementNeutral, onIncrementBad }) => (\r\n    <div className=\"Feedback__controls\">\r\n        <button className=\"btn-item\" type=\"button\" onClick={onIncrementGood}>Good</button>\r\n        <button className=\"btn-item\" type=\"button\" onClick={onIncrementNeutral}>Neutral</button> \r\n        <button className=\"btn-item\" type=\"button\" onClick={onIncrementBad}>Bad</button>  \r\n    </div>\r\n);\r\n\r\nFeedbackOptions.propTypes = {\r\n    onIncrementGood: PropTypes.func.isRequired,\r\n    onIncrementNeutral: PropTypes.func.isRequired,\r\n    onIncrementBad: PropTypes.func.isRequired\r\n}\r\n\r\nexport default FeedbackOptions;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';;\r\n\r\nconst Section = (props) => (\r\n    <section>\r\n        <h2>{props.title}</h2>\r\n        {props.children}\r\n    </section>\r\n);\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Section;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => (\r\n    <p>{message}</p>\r\n);\r\n\r\nNotification.propTypes = {\r\n    message: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Notification;","import React from 'react';\r\nimport Statistics from '../Statistics/Statistics';\r\nimport FeedBackOptions from '../FeedbackOptins/FeedbackOptions';\r\nimport Section from '../Section/Section';\r\nimport Notification from '../Notification/Notification';\r\nimport './Feedback.css';\r\n\r\nclass Feedback extends React.Component {\r\n    state = {\r\n        good: 0,\r\n        neutral: 0,\r\n        bad: 0,\r\n        total: 0,\r\n        positive: 0\r\n    };\r\n\r\n    countIncrementGood = () => {\r\n        this.setState(prevState => ({\r\n            good: prevState.good + 1,\r\n        }));\r\n        this.countTotalFeedback();\r\n        this.countPositiveFeedbackPercentage();\r\n    };\r\n\r\n    countIncrementNeutral = () => {\r\n        this.setState(prevState => ({\r\n            neutral: prevState.neutral + 1,\r\n        }));\r\n        this.countTotalFeedback();\r\n        this.countPositiveFeedbackPercentage();\r\n    };\r\n\r\n    countIncrementBad = () => {\r\n        this.setState(prevState => ({\r\n            bad: prevState.bad + 1,\r\n        }));\r\n        this.countTotalFeedback();\r\n        this.countPositiveFeedbackPercentage();\r\n    };\r\n\r\n    countTotalFeedback = () => {\r\n        this.setState(prevState => ({\r\n            total: prevState.total + 1,\r\n        }));\r\n    };\r\n\r\n    countPositiveFeedbackPercentage = () => {\r\n        this.setState(prevState => ({\r\n            positive: Math.round(prevState.good / prevState.total * 100),\r\n        }));\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"feedback\">\r\n            <Section title=\"Please leave feedback\">\r\n                <FeedBackOptions\r\n                onIncrementGood={this.countIncrementGood}\r\n                onIncrementNeutral={this.countIncrementNeutral}\r\n                onIncrementBad={this.countIncrementBad}\r\n                />\r\n            </Section>\r\n\r\n            <Section title=\"Statistics\">\r\n                {this.state.total ? (\r\n                    <Statistics\r\n                    good={this.state.good}\r\n                    neutral={this.state.neutral}\r\n                    bad={this.state.bad}\r\n                    total={this.state.total}\r\n                    positivePercentage={this.state.positive}\r\n                />\r\n                ) : null}\r\n            </Section>\r\n            {this.state.total ? null : <Notification message=\"No feedback given\" />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Feedback;","import Feedback from './Feedback/Feedback';\n\nconst App = () => {\n  return (\n  \n      <Feedback />\n    \n  );\n};\n\nexport default App;\n","import React from 'react';\nimport App from './App';\nimport ReactDOM from 'react-dom';\n// import './index.css';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}